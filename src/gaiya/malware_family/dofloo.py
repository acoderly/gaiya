import os
import gaiya.malware_family.config as config

from gaiya.malware_family import Alpha


class dofloo(Alpha):
    NAME = "dofloo"

    def __init__(self):
        super(dofloo, self).__init__()
        self.logger = self._init_logger()
        self.arch_ability = []

    def get_current_ability(self):
        path = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        arch_parent_dir = os.path.join(path, os.path.join("ida_python_script", self.NAME))
        print(arch_parent_dir)
        for arch in os.listdir(arch_parent_dir):
            abs_path = os.path.join(arch_parent_dir, arch)
            if not os.path.isdir(abs_path):
                continue
            self.arch_ability.append(arch)

    def run(self, data):

        # file_path = data.get("file_path", "")

        self.logger.info(f"dofloo run {config.IDA_EXE_INSTALLED_PATH}")
        self.copy_script_to_ida()
        self.run_ida_script(config.IDA_EXE_INSTALLED_PATH,
                            "/Applications/IDAPro7.0/ida.app/Contents/MacOS/python/gaiya/dofloo/armel/extract.py /Users/orcsir/pycharm_project/git/gaiya/src/gaiya/ida_python_script/dofloo/armel",
                            "/Users/orcsir/pycharm_project/git/gaiya/src/gaiya/sample/05b840bbc02dd794a2858dad1b367f84")
